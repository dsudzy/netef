@mixin local-font($font-family, $font-name, $font-style, $font-weight,
  $font-revision: 1, $font-path: '/fonts/', $types: ('eot', 'woff2', 'ttf', 'woff', 'svg')) {
  @font-face {
    font-family: $font-family;
    @if nth($types, 1) == 'eot' {
        src:url( $font-path + $font-name + '.eot?r=' + $font-revision);
    }
    $srcs: ();
    @each $type in $types {
        @if $type == 'eot' {
                $srcs: append($srcs, unquote('url("' + $font-path + $font-name + '.eot?r=' + $font-revision + '#iefix") format("embedded-opentype")'), 'comma');
            } @else if type == 'ttf' {
                $srcs: append($srcs, unquote('url("' + $font-path + $font-name + '.ttf?r=' + $font-revision + '#iefix") format("truetype")'), 'comma');
            } @else {
                $srcs: append($srcs, unquote('url("' + $font-path + $font-name + '.' + $type + '?r=' + $font-revision + '#iefix") format("' + $type + '")'), 'comma');
            }
    }
    src: $srcs;
    font-weight: $font-weight;
    font-style: $font-style;
  }
}

@mixin icon-font($font-name: 'icomoon', $font-revision: 1,
  $class-prefix: "icon", $font-path: '/fonts/')
{
    @include local-font($font-name, $font-name, normal, normal, $font-revision,
        $font-path);
  [class^="#{$class-prefix}-"], [class*=" #{$class-prefix}-"] {
      font-family: $font-name !important;
      speak: none;
      font-style: normal;
      font-weight: normal;
      font-variant: normal;
      text-transform: none;
      line-height: 1;

      // Better Font Rendering ===========
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
}

[class^="icon-"], [class*=" icon-"] {
    /* use !important to prevent issues with browser extensions that change fonts */
    font-family: 'verizon-icons' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;

    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@include icon-font('verizon-icons', 7);

.icon-down_arrow:before {
  content: "\e908";
}
.icon-exit:before {
  content: "\e909";
}
.icon-plus:before {
  content: "\e907";
}
.icon-close-circle:before {
  content: "\e906";
}
.icon-left-chevron:before {
  content: "\e904";
}
.icon-right-chevron:before {
  content: "\e905";
}
.icon-dfa_logo_abbr:before {
  content: "\e900";
}
.icon-dfa_logo_full:before {
  content: "\e901";
}
.icon-dfa_logo_semi-stacked:before {
  content: "\e902";
}
.icon-verizon-logo .path1:before {
  content: "\e608";
  color: rgb(7, 7, 7);
}
.icon-verizon-logo .path2:before {
  content: "\e609";
  margin-left: -4.55078125em;
  color: rgb(7, 7, 7);
}
.icon-verizon-logo .path3:before {
  content: "\e60a";
  margin-left: -4.55078125em;
  color: rgb(7, 7, 7);
}
.icon-verizon-logo .path4:before {
  content: "\e60b";
  margin-left: -4.55078125em;
  color: rgb(7, 7, 7);
}
.icon-verizon-logo .path5:before {
  content: "\e60c";
  margin-left: -4.55078125em;
  color: rgb(7, 7, 7);
}
.icon-verizon-logo .path6:before {
  content: "\e60d";
  margin-left: -4.55078125em;
  color: rgb(7, 7, 7);
}
.icon-verizon-logo .path7:before {
  content: "\e60e";
  margin-left: -4.55078125em;
  color: rgb(7, 7, 7);
}
.icon-verizon-logo .path8:before {
  content: "\e60f";
  margin-left: -4.55078125em;
  color: rgb(205, 4, 11);
}
.icon-verizon-logo .path9:before {
  content: "\e610";
  margin-left: -4.55078125em;
  color: rgb(7, 7, 7);
}
.icon-twitter:before {
  content: "\f099";
}
.icon-facebook:before {
  content: "\f09a";
}
.icon-envelope:before {
  content: "\f0e0";
}
.icon-linkedin:before {
  content: "\f0e1";
}
.icon-youtube:before {
  content: "\f167";
}
.icon-instagram:before {
  content: "\f16d";
}
.icon-tumblr:before {
  content: "\f173";
}
.icon-close:before {
  content: "\e600";
}
.icon-circle-down:before {
  content: "\e604";
}
.icon-share2:before {
  content: "\e903";
}
.icon-backward2:before {
  content: "\e90a";
}
.icon-forward3:before {
  content: "\e90b";
}
.icon-circle-down:before {
  content: "\e604";
}

